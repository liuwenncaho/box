<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    
    <http pattern="/css/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    <http pattern="/login.jsp*" security="none" />

	<http auto-config='true'>
		<intercept-url pattern="/admin.jsp" access="ROLE_ADMIN" />
		<intercept-url pattern="/**" access="ROLE_USER"
			method="GET" requires-channel="any" />
		<form-login />
		<logout />
		<remember-me use-secure-cookie="true" />
		<!-- 如果拦截的url需要往数据库中配置，这个地方的filter可以从数据库中取出 -->
<!-- 		<custom-filter ref="" before="FILTER_SECURITY_INTERCEPTOR" /> -->
	</http>
	<!-- 直接在xml中配置用户，密码，角色关系 <authentication-manager> <authentication-provider> 
		<user-service> <user name="admin" password="admin" authorities="ROLE_USER, 
		ROLE_ADMIN" /> <user name="user" password="user" authorities="ROLE_USER" 
		/> </user-service> </authentication-provider> </authentication-manager> -->
	<!-- 注意能够为authentication-manager 设置alias别名 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="boxUserDetailsService">
			<!-- <password-encoder ref="md5PasswordEncoder"> -->
			<!-- 用户名做为盐值,就是加密时附带的内容 -->
			<!-- <salt-source user-property="username" /> -->
			<!-- </password-encoder> -->
			
		</authentication-provider>
	</authentication-manager>




	<!-- 事件监听:实现了 ApplicationListener监听接口，包括AuthenticationCredentialsNotFoundEvent 
		事件， AuthorizationFailureEvent事件，AuthorizedEvent事件， PublicInvocationEvent事件 -->
	<beans:bean class="org.springframework.security.authentication.event.LoggerListener" />
	
	 <!-- 用户的密码加密或解密 -->  
    <beans:bean id="md5PasswordEncoder"  class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" /> 
    
    
</beans:beans>